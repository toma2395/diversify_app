name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  REGION: us-east-1
  ACCOUNT_ID: '012648543433'
  DATABASE_UPDATE: False
  NLB_DNS_NAME: ab494f716612d4e3b9608b94c870ffa5-598f8ea654277a83.elb.us-east-1.amazonaws.com

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      working-directory: ./app

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --ignore=E501 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      working-directory: ./app

    - name: SetUp DB for testing
      run: |
        docker build -t diversify_db:latest .
        docker run --name diversify_db -p 5432:5432 -d diversify_db:latest
        sleep 10
      working-directory: ./db
    - name: Test with pytest
      run: |
        pytest
      working-directory: ./app

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.REGION }}
    - name:  Docker login
      run: |
        aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/diversify_app
    - name:  Docker build
      run: |
        docker build -t diversify_app:latest .
        docker tag diversify_app:latest $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/diversify_app:latest
      working-directory:  ./app
    - name:  Docker push
      run: |
        docker push $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/diversify_app:latest



  deploy:
      runs-on: ubuntu-latest
      needs: build

      steps:
      - uses: actions/checkout@v3
      - uses: falnyr/replace-env-vars-action@master
        env:
          IMAGEURL: ${{ env.ACCOUNT_ID }}.dkr.ecr.$${{ env.REGION }}.amazonaws.com/diversify_app:latest
          NLB: ${{ env.NLB_DNS_NAME }}
        with:
          filename: ./k8s/app_token.yml
      - name: checking zamianka ???
        run: |
          cat ./k8s/app_token.yml
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}
      - name: update kubeconfig
        run: |
          aws eks update-kubeconfig --name dev_k8s_cluster --region $REGION
      - name: deploy APP to k8s
        run: |
          kubectl apply -f ./k8s/app_token.yml




  deploy_db:
        runs-on: ubuntu-latest
        needs: build
        steps:
        - uses: actions/checkout@v3
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.REGION }}
        - name:  Docker login
          run: |
            aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/diversify_db
        - name:  Docker build
          run: |
            docker build -t diversify_db:latest .
            docker tag diversify_db:latest $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/diversify_db:latest
          working-directory: ./db
        - name:  Docker push
          run: |
            docker push $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/diversify_db:latest
            sleep 3
        - name: update kubeconfig
          run: |
            aws eks update-kubeconfig --name dev_k8s_cluster --region $REGION
        - uses: falnyr/replace-env-vars-action@master
          env:
            DBIMAGE: ${{ env.ACCOUNT_ID }}.dkr.ecr.$${{ env.REGION }}.amazonaws.com/diversify_db:latest
          with:
            filename: ./k8s/db.yml
        - name: deploy DB to k8s
          run: |
            kubectl apply -f ./k8s/db.yml